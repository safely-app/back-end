# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ hashFiles('**/package-lock.json') }}
    
    - run: npm ci

  testing:

    name: Unit Tests & coverage
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    #- name: create env file
    #  run: |
    #    touch .env
    #    echo PRIVATE_KEY =${{ secrets.PRIVATE_KEY }} >> .env
    #    echo PUBLIC_KEY =${{ secrets.PUBLIC_KEY }} >> .env

    - uses: actions/cache@v2
      with:
       path: node_modules
       key: ${{ hashFiles('**/package-lock.json') }}  
        
    #- run: npm test
    
   # - uses: codecov/codecov-action@v1
    #  with:
     #   token: ${{ secrets.CODECOV_TOKEN }}
      #  file: ./coverage/lcov.info
    
    #- uses: actions/upload-artifact@v1
     # with:
      #  name: lcov.info
       # path: ./coverage/lcov.info
    
  load_test:
    name: 50 users Load Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1
      - name: Start server and run tests
        run: |
          #npm run dev & npx wait-on http://localhost:3000
          #./k6 run ./test/stressTest/LoadTest.js
          echo "Test skipped !"
      
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ hashFiles('**/package-lock.json') }}  

  fake_deploy:
      name: Fake deploy with metrics
      runs-on: ubuntu-latest
      needs: [load_test, testing]
      steps:
        - name: Quickmetrics
          uses: screendriver/quickmetrics-action@v1
          with:
            name: fake-deploy
            api-key: ${{ secrets.QUICKMETRICS_API_KEY }}
        - name: Invoke deployment hook
          uses: distributhor/workflow-webhook@v1
          env:
            webhook_url: ${{ secrets.WEBHOOK_URL }}
            webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          
